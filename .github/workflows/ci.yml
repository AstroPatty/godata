# This file is autogenerated by maturin v1.2.3
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - server
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux_build_server:
    name: Build server on Linux
    runs-on: ubuntu-latest
    outputs:
      artifact: ${{ steps.build.outputs.artifact }}
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu, aarch64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
          all-features: true
          quiet: true
      - uses: actions/upload-artifact@v3
        with:
          name: godata_server-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/godata_server
  mac_build_server:
    name: Build server on macOS
    runs-on: macos-latest
      
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - id: build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
          all-features: true
          quiet: true
      - uses: actions/upload-artifact@v3
        with:
          name: godata_server-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/godata_server

  test_linux:
    name: Test on Linux
    runs-on: ubuntu-latest
    needs: [linux_build_server]
    strategy:
      matrix:
        target: [x86_64-unknown-linux-gnu]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: godata_server-${{ matrix.target }}
          path: server
      - name: look
        run: |
          ls -l
          ls -l godata
          pwd 
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install godata
        run: poetry install
      - name: Run tests
        run: |
          export DATA_PATH=$(pwd)/tests/test_data/
          chmod +x ./server/godata_server
          ./server/godata_server &
          cd tests
          poetry run pytest
  test_mac:
    name: test on macOS
    runs-on: macos-latest
    needs: [mac_build_server]
    strategy:
      matrix:
        target: [x86_64-apple-darwin]
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: godata_server-${{ matrix.target }}
          path: server
      - name: look
        run: |
          ls -l
          ls -l godata
          pwd 
      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Install godata
        run: poetry install
      - name: Run tests
        run: |
          export DATA_PATH=$(pwd)/tests/test_data/
          chmod +x ./server/godata_server
          ./server/godata_server &
          cd tests
          poetry run pytest